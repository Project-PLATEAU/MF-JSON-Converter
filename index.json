{
  "index.html": {
    "href": "index.html",
    "title": "人流データ変換ツール",
    "keywords": "人流データ変換ツール 本システムは、様々な形式の人流データを読み込み、汎用フォーマット人流データ「MF-JSON」に変換するためのシステムです。"
  },
  "manual/dataDefineMan.html": {
    "href": "manual/dataDefineMan.html",
    "title": "任意データの定義",
    "keywords": "任意データの定義 1 本書について 本書では、人流データ変換ツール（以下「本システム」という。）で用いるiniファイルの使用、記述方法について記載しています。 2 使い方 ファイル名「DefinedFormat.ini」(以下「設定ファイル」という。)を用意し、「MFConverterMain.py」と同じ階層に配置して使用します。 人流データの変換実行時に読み込んだファイルフォーマットがプリセットで用意されている３社 (株式会社ブログウォッチャー、株式会社Agoop、株式会社Unerry) のいずれのデータでもなかった場合に設定ファイルの読み込みを行い、変換可否の判断、変換を行います。 3 記述方法 設定ファイルでは変換するデータの個別の値が変換元のファイルのどこに記述されているか、またその記述様式について設定します。 汎用フォーマットの人流データへの変換には１つの移動体情報につき、下記が必要となります。 移動体識別子 移動体検出日時 二次元座標(緯度,経度) また、選択項目として下記についても規定、変換することができます。 性別 年齢 設定ファイルの記述方法は読み込むデータフォーマットによって異なります。 .CSVファイル CSVファイルでは下記セクションについて設定します。 セクション パラメータ 詳細 必記要素 id param_path 移動体識別子 〇 year param_path date_format 年 〇 month param_path date_format 月 〇 day param_path date_format 日 〇 hour param_path date_format 時 〇 minute param_path date_format 分 〇 second param_path date_format 秒 〇 latitude param_path 緯度 〇 longitude param_path 経度 〇 gender param_path 性別 × age param_path 年齢 × param_pathに各数値の列のヘッダーを設定します。 日時関連のデータセクションではdate_formatにISO8601書式で記述方法を設定します。 記述例 変換元ファイル dailyid 年 月 日 時 分 秒 緯度 経度 001 2025 02 07 12 30 0 35.681236 139.767125 002 2025 02 07 12 32 0 35.680500 139.767140 003 2025 02 07 12 34 0 35.680490 139.766800 設定ファイル [id] param_header = dailyid [year] param_header =年 date_format=%Y [month] param_header =月 date_format=%m [day] param_header =日 date_format=%d [hour] param_header =時 date_format=%H [minute] param_header =分 date_format=%M [second] param_header =秒 date_format=%S [latitude] param_header =緯度 [longitude] param_header =経度 .JSONファイル JSONファイルでは下記セクションについて設定します。 セクション パラメータ 説明 必記要素 id param_path param_type 移動体識別子 〇 date param_path param_type date_format 移動体検出日時 〇 latitude param_path param_type 緯度 〇 longitude param_path param_type 経度 〇 gender param_path param_type 性別 × age param_path param_type 年齢 × 各セクションのparam_pathに値の記述位置をJsonPath形式で設定します。 param_typeに記述形式(キー：keyか値：value)を設定します。 dateについてはdate_formatにISO8601書式で記述方法を設定します。 JsonPathでは 「$」がRootノードを示します。 「.」で各要素を区切ります。 任意要素は「*」で記載します。 配列要素は「[ ]」で何番目の要素かを示します。 記述例 変換元ファイル { \"timestamps\": { \"2025-02-04T12:00:00Z\": [ { \"pedestrian_id\": 1, \"location\": { \"latitude\": 35.681236, \"longitude\": 139.767125 }, }, { \"pedestrian_id\": 2, \"location\": { \"latitude\": 35.680500, \"longitude\": 139.766800 }, } ], \"2025-02-04T12:00:01Z\": [ { \"pedestrian_id\": 1, \"location\": { \"latitude\": 35.681250, \"longitude\": 139.767140 }, }, { \"pedestrian_id\": 2, \"location\": { \"latitude\": 35.680490, \"longitude\": 139.766800 }, } ] } } 設定ファイル [id] param_path = =$.data[*].pedestrian_id param_type=value [date] param_path=$.data[*].timestamps[*] param_type=key [latitude] param_path =$.data[*].location.latitude param_type=value [longitude] param_path =$.data[*].location.longitude param_type=value .XMLファイル XMLファイルでは下記セクションについて設定します。 セクション パラメータ 説明 必記要素 id param_path 移動体識別子 〇 date param_path date_format 移動体検出日時 〇 latitude param_path 緯度 〇 longitude param_path 経度 〇 gender param_path 性別 × age param_path 年齢 × param_pathに各数値のxPathを設定します。 dateについてはdate_formatにISO8601書式で記述方法を設定します。 xPathでは 「\\」で各要素を区切ります。 属性情報として保存されている値は「@」で区切ります。 任意要素は「*」で記載します。 記述例 変換元ファイル <PedestrianFlow> <Pedestrian id=\"1\"> <Position latitude=\"35.6895\" longitude=\"139.6917\" /> <Timestamp>2025-01-30T12:00:00Z</Timestamp> </Pedestrian> <Pedestrian id=\"2\"> <Position latitude=\"35.6880\" longitude=\"139.6920\" /> <Timestamp>2025-01-30T12:00:05Z</Timestamp> </Pedestrian> </PedestrianFlow> 設定ファイル [id] param_path = \\PedestrianFlow\\Pedestrian@id [date] param_path=\\PedestrianFlow\\Pedestriantimestamp[*] date_format=%Y-%m-%dT%H:%M:%SZ [latitude] param_path =\\PedestrianFlow\\Pedestrian\\Position@latitude [longitude] param_path =\\PedestrianFlow\\Pedestrian\\Position@longitude"
  },
  "manual/devMan.html": {
    "href": "manual/devMan.html",
    "title": "環境構築手順書",
    "keywords": "環境構築手順書 1 本書について 本書は、人流データ変換ツール（以下「本システム」という。）の利用環境構築手順について記載しています。 Tip 本システムの構成や仕様の詳細については技術検証レポートも参考にしてください。 2 動作環境 本システムの動作環境は以下のとおりです。 項目 最小動作環境 推奨動作環境 OS Microsoft Windows 10 または 11（64bit） 同左 CPU Intel Core i5以上 同左 GPU NVIDIA製GPU NVIDIA Geforce GTX1650以上（4GB以上のメモリ） メモリ 4GB以上 32GB以上 ストレージ 最低30GB以上の空き容量 SSDドライブ 最低60GB以上の空き容量 ディスプレイ解像度 1920×1080以上 同左 ネットワーク 必須 同左 3 インストール手順 GitHubページから「MFConverterMain.exe」をダウンロードします。 「MFConverterMain.exe」を実行します。 4 ビルド手順 自身でソースファイルをダウンロードしビルドを行うことでプラグインを生成することができます ソースファイルはこちらからダウンロード可能です。 GitHubからダウンロードしたソースファイルの構成は以下のようになっています。 MFConverter ├─FormatData ├─GUI └─Utils ビルド方法は次のとおりです。 本システムをビルドするにはPython 3.11が必要です。 Tip 仮想環境を作成して作業することを推奨します。 PowerShellでダウンロードした「MFConverter」フォルダに移動します。 次のコマンドを実行します。 pip install -r requirements.txt 次のコマンドを実行すると、アプリが起動します。 Python MFConverterMain.py 5 準備物一覧 アプリケーションを利用するために以下のデータを入手します。 データの入力方法については操作マニュアルをご参照下さい。 データ種別 機能 用途 入力方法 1 人流データ 人流データ 変換元データ 各自でご用意下さい 対応しているフォーマットや独自フォーマットの定義方法については操作マニュアル、任意データの定義を参照下さい"
  },
  "manual/userMan.html": {
    "href": "manual/userMan.html",
    "title": "操作マニュアル",
    "keywords": "操作マニュアル 1 本書について 本書では、人流データ変換ツール（以下「本システム」という。）の操作手順について記載しています。 2 使い方 ファイル「MFConverterMain.exe」を実行すると以下の画面が表示されます。 ① 変換ファイル ・読み込んだファイルの名前が表示されます。 ② 参照 ・クリックするとファイルダイアログが表示されます。 ・ダイアログ内で選択されたファイルを変換元の人流データとして読み込みます。 ③ 変換 ・クリックすると、読み込んだ人流データを汎用フォーマット人流データに変換（※）します。 ・変換された汎用フォーマット人流データは変換元のファイルと同じフォルダ内に出力されます。 ④ 人流データ情報一覧 ・読み込んだファイルに含まれている人流データに関する情報を一覧で表示します。 ⑤ 閉じる 「MFConverterMain.exe」を終了します。 （※）変換中は以下の画面が表示されます。「Finished」というメッセージが表示されると変換完了となります。 3 出力データ 本システムで出力されるデータは以下のとおりです。 出力データ 内容 データ形式 変換人流データ 読み込んだ人流データを汎用フォーマット人流データに変換したデータ。 JSON"
  }
}